javascript:(function(){  const canvas = document.createElement('canvas');  canvas.width = 600;  canvas.height = 400;  canvas.style.border = '1px solid black';  canvas.style.display = 'block';  canvas.style.margin = '0 auto';  const context = canvas.getContext('2d');  document.body.appendChild(canvas);  let x = canvas.width / 2;  let y = canvas.height - 30;  let dx = 2;  let dy = -2;  const ballRadius = 10;  const paddleHeight = 10;  const paddleWidth = 75;  let paddleX = (canvas.width - paddleWidth) / 2;  let rightPressed = false;  let leftPressed = false;  let score = 0;  function drawBall() {    context.beginPath();    context.arc(x, y, ballRadius, 0, Math.PI*2);    context.fillStyle = '#0095DD';    context.fill();    context.closePath();  }  function drawPaddle() {    context.beginPath();    context.rect(paddleX, canvas.height-paddleHeight, paddleWidth, paddleHeight);    context.fillStyle = '#0095DD';    context.fill();    context.closePath();  }  function drawScore() {    context.font = '16px Arial';    context.fillStyle = '#0095DD';    context.fillText(%60Score: ${score}%60, 8, 20);  }  function draw() {    context.clearRect(0, 0, canvas.width, canvas.height);    drawBall();    drawPaddle();    drawScore();    if (x + dx > canvas.width - ballRadius || x + dx < ballRadius) {      dx = -dx;    }    if (y + dy < ballRadius) {      dy = -dy;    } else if (y + dy > canvas.height - ballRadius) {      if (x > paddleX && x < paddleX + paddleWidth) {        dy = -dy;        score++;      } else {        alert('Game Over');        document.location.reload();        clearInterval(interval);      }    }    if (rightPressed && paddleX < canvas.width - paddleWidth) {      paddleX += 7;    } else if (leftPressed && paddleX > 0) {      paddleX -= 7;    }    x += dx;    y += dy;  }  function keyDownHandler(e) {    if (e.key === 'Right' || e.key === 'ArrowRight') {      rightPressed = true;    } else if (e.key === 'Left' || e.key === 'ArrowLeft') {      leftPressed = true;    }  }  function keyUpHandler(e) {    if (e.key === 'Right' || e.key === 'ArrowRight') {      rightPressed = false;    } else if (e.key === 'Left' || e.key === 'ArrowLeft') {      leftPressed = false;    }  }  document.addEventListener('keydown', keyDownHandler, false);  document.addEventListener('keyup', keyUpHandler, false);  const interval = setInterval(draw, 10);})();
